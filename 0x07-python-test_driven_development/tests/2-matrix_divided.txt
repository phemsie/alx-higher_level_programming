The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
------------------------

This is an example text file in reStructuredText format.  First import
``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

    >>> matrix_divided([[2, 4, 8], [1, 2, 3]], 2)
    [[1.0, 2.0, 4.0], [0.5, 1.0, 1.5]]

Test Singular element:    
    >>> matrix_divided([[2]], 2)
    [[1.0]]

Test assignment modification:
    >>> m = [[2,4,8],[1,2,3]]
    >>> matrix_divided(m, 2)
    [[1.0, 2.0, 4.0], [0.5, 1.0, 1.5]]
    >>> m[1][1]
    2

Test div by inf:
    >>> matrix_divided([[2, 4, 8], [1, 2, 3]], float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Test div by nan:
    >>> matrix_divided([[2, 4, 8], [1, 2, 3]], float('nan'))
    [[nan, nan, nan], [nan, nan, nan]]

Test div by zero:
    >>> matrix_divided([[2, 4, 8], [1, 2, 3]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

Test argument is None:
    >>> matrix_divided(none, 2)
    Traceback (most recent call last):
        ...
    NameError: name 'none' is not defined

Test div by non number:
    >>> matrix_divided([[2, 4, 8], [1, 3]], 'four')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Test an empty matrix:
    >>> matrix_divided([[]], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test empty matrix again:
    >>> matrix_divided([[], [], []], 4)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test a matrix with non number:
    >>> matrix_divided([[2, 4, 8], [1, 'two', 3]], 4)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test a matix with different rows:
    >>> matrix_divided([[2, 4, 8], [1, 3]], 4)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size
